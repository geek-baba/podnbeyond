name: Preview Deploy

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  preview:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/podnbeyond
      WEB_URL: http://localhost:3000
      API_URL: http://localhost:4000
      JWT_SECRET: preview_secret
      RAZORPAY_KEY_ID: ${{ secrets.RAZORPAY_KEY_ID || 'stub_key' }}
      RAZORPAY_KEY_SECRET: ${{ secrets.RAZORPAY_KEY_SECRET || 'stub_secret' }}
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      
      - name: Build Docker images
        run: |
          docker build -t pb-api:pr -f apps/api/Dockerfile .
          docker build -t pb-web:pr -f apps/web/Dockerfile .
      
      - name: Bring up preview stack
        run: |
          docker compose up -d postgres || true
          # Create ephemeral compose file for api+web using built images
          cat > docker-compose.preview.yml <<'YAML'
          services:
            api:
              image: pb-api:pr
              ports: ["4000:4000"]
              environment:
                DATABASE_URL: ${DATABASE_URL}
                JWT_SECRET: ${JWT_SECRET}
                RAZORPAY_KEY_ID: ${RAZORPAY_KEY_ID}
                RAZORPAY_KEY_SECRET: ${RAZORPAY_KEY_SECRET}
            web:
              image: pb-web:pr
              ports: ["3000:3000"]
              environment:
                API_URL: ${API_URL}
                WEB_URL: ${WEB_URL}
          YAML
          docker compose -f docker-compose.preview.yml up -d
      
      - name: Wait for readiness
        run: |
          npx wait-on -t 90000 tcp:4000
          npx wait-on -t 90000 http://localhost:3000
      
      - name: Publish preview info
        run: |
          echo "API: http://localhost:4000" > preview.txt
          echo "WEB: http://localhost:3000" >> preview.txt
      
      - name: Upload preview endpoints
        uses: actions/upload-artifact@v4
        with:
          name: preview-urls
          path: preview.txt
      
      - name: Comment on PR with instructions
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          recreate: true
          message: |
            ## ðŸš€ Preview Deployment
            
            Your preview environment is ready! The services are running on the GitHub runner.
            
            **Note**: These URLs are only accessible within the CI environment. For public previews, consider integrating with Render, Railway, or Fly.io.
            
            - **API**: http://localhost:4000
            - **Web**: http://localhost:3000
            - **Admin**: Use `admin@podnbeyond.com` / `admin123`
            
            Check the [preview-urls artifact](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) for more details.